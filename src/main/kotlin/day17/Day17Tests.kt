package day17

import java.io.File

fun main() {
    initPow2()

    val computer = Computer(
        35185188490943,
        0,
        0,
        //listOf(2, 4, 1, 3, 7, 5, 1, 5),
        listOf(2, 4, 1, 3, 7, 5, 1, 5, 0, 3, 4, 3, 5, 5, 3, 0),
        0
    )
    println(computer.executeAndPrint())
    println("(${computer.a}, ${computer.b}, ${computer.c}), (${computer.program})")


    //brutefile()

    //  202400000000000 too low
    //   35184478215871
    // 2024000000000000 too high
    // 1113200000000000

//    var i = Int.MAX_VALUE
//    while (i > 0) {
//        println(i)
//        Computer(
//            i,
//            0,
//            0,
//            listOf(2, 4, 1, 3, 7, 5, 1, 5, 0, 3, 4, 3, 5, 5, 3, 0),
//            0
//        ).executeAndPrint()
//        i--
}

fun brutefile() {
    val writer = File("computer.txt").bufferedWriter()

    val expectedOutput = listOf(2, 4, 1, 3, 7, 5, 1, 5, 0, 3, 4, 3, 5, 5, 3, 0)

    val start = 35185188490943
    for (i in 0..1000000000) {
        if (i % 100000 == 0) println(i)
        val result = Computer(
            start + i,
            0,
            0,
            expectedOutput,
            0
        ).executeAndPrint()
        if (result.startsWith("2,4,1,3,7,5,1,5")) {
            writer.write(String.format("%016d  ", start + i) + result)
            writer.newLine()
        }
    }

    writer.close()
}

/*
0 ... 1 digit
8 = 8ˆ1 ... 2 digits
64 = 8ˆ2 ... 3 digits
512 = 8ˆ3 ... 4 digits

16 digits -> 8ˆ15 =  35184372088832
17 digits -> 8ˆ16 = 281474976710656

                  2,4,1,3,7,5,1,5,0,3,4,3,5,5,3,0

  35184372095648  2,4,1,3,7,6,6,6,6,6,6,6,6,6,7,7
  35184372095679  2,4,1,3,7,6,6,6,6,6,6,6,6,6,7,7

  35184374795885  2,4,1,3,7,5,1,7,6,6,6,6,6,6,7,7
  35184374795967  2,4,1,3,7,5,1,7,6,6,6,6,6,6,7,7
  35184378990189  2,4,1,3,7,5,1,6,6,6,6,6,6,6,7,7
  35184378990271  2,4,1,3,7,5,1,6,6,6,6,6,6,6,7,7
  35184383184575  2,4,1,3,7,5,1,3,6,6,6,6,6,6,7,7
  35184478215871  2,4,1,3,7,5,1,5,0,6,6,6,6,6,7,7

  35184478215871  2,4,1,3,7,5,1,5,0,6,6,6,6,6,7,7
  35184746520173  2,4,1,3,7,5,1,5,0,5,6,6,6,6,7,7
  35184746520255  2,4,1,3,7,5,1,5,0,5,6,6,6,6,7,7
  35184746651245  2,4,1,3,7,5,1,5,0,5,6,6,6,6,7,7
  35184746651327  2,4,1,3,7,5,1,5,0,5,6,6,6,6,7,7
  35184754908781  2,4,1,3,7,5,1,5,0,5,6,6,6,6,7,7
  35184754908863  2,4,1,3,7,5,1,5,0,5,6,6,6,6,7,7
  35184755039853  2,4,1,3,7,5,1,5,0,5,6,6,6,6,7,7
  35184755039935  2,4,1,3,7,5,1,5,0,5,6,6,6,6,7,7
  35184771685997  2,4,1,3,7,5,1,5,0,5,6,6,6,6,7,7
  35184771686079  2,4,1,3,7,5,1,5,0,5,6,6,6,6,7,7
  35184771751533  2,4,1,3,7,5,1,5,0,5,6,6,6,6,7,7
  35184771751615  2,4,1,3,7,5,1,5,0,5,6,6,6,6,7,7
  35184771817069  2,4,1,3,7,5,1,5,0,5,6,6,6,6,7,7
  35184771817151  2,4,1,3,7,5,1,5,0,5,6,6,6,6,7,7
  35185188490861  2,4,1,3,7,5,1,5,0,0,6,6,6,6,7,7
  35185188490943  2,4,1,3,7,5,1,5,0,0,6,6,6,6,7,7


Program: 2,4,1,3,7,5,1,5,0,3,4,3,5,5,3,0

2,4
b = a % 8
1,3
b = b xor 3
7,5
c = a / 2ˆb
1,5
b = b xor 5
0,3
a = a / 2ˆ3
4,3
b = b xor c
5,5
print(b % 8)
3,0
go beginning
 */